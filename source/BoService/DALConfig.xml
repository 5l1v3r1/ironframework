<!--http://stackoverflow.com/questions/17963883/resolutionfailedexception-when-register-a-unity-interceptor-->
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <container name="DefContainer">
      <extension type="Interception" />
      <!--EF features-->
        <register  type="DataAccessObject.IUnitOfWork, DataAccessObject.Unity3"
                mapTo="DataAccessObject.EFUnitOfWork, DataAccessObject.Unity3">
        <interceptor type="InterfaceInterceptor"/>
      </register >
      
      <register  type="DataAccessObject.Repositories.IStoredProcedureFunctionsDAO, DataAccessObject.Unity3"
          mapTo="DataAccessObject.Repositories.StoredProcedureFunctionsDAO, DataAccessObject.Unity3">
        <interceptor type="InterfaceInterceptor"/>
      </register >

      <register  type="System.Data.Entity.DbContext, EntityFramework"
    mapTo="DataAccessObject.AdventureWorksEntities, DataAccessObject.Unity3">

        <interceptor type="InterfaceInterceptor"/>
      </register >

      <register  type="DataAccessObject.IObjectContext, DataAccessObject.Unity3"
    mapTo="DataAccessObject.ObjectContextAdapter, DataAccessObject.Unity3">
        <interceptor type="InterfaceInterceptor"/>
      </register >

     <register  type="DataAccessObject.IRepository`1[[BusinessEntities.Address,BusinessEntities]], DataAccessObject.Unity3" 
                  mapTo="DataAccessObject.EFRepository`1[[BusinessEntities.Address,BusinessEntities]], DataAccessObject.Unity3">
         <!--interceptor type="InterfaceInterceptor"/>
         <interceptionBehavior type="Messag.Utility.EntLib.Interceptor.LoggingInterceptor, Message.Utility"/ -->
      </register >

     <register  type="DataAccessObject.IRepository`1[[BusinessEntities.Contact,BusinessEntities]], DataAccessObject.Unity3" 
                  mapTo="DataAccessObject.EFRepository`1[[BusinessEntities.Contact,BusinessEntities]], DataAccessObject.Unity3">
         <!--interceptor type="InterfaceInterceptor"/>
         <interceptionBehavior type="Messag.Utility.EntLib.Interceptor.LoggingInterceptor, Message.Utility"/ -->
      </register >

     <register  type="DataAccessObject.IRepository`1[[BusinessEntities.Employee,BusinessEntities]], DataAccessObject.Unity3" 
                  mapTo="DataAccessObject.EFRepository`1[[BusinessEntities.Employee,BusinessEntities]], DataAccessObject.Unity3">
         <!--interceptor type="InterfaceInterceptor"/>
         <interceptionBehavior type="Messag.Utility.EntLib.Interceptor.LoggingInterceptor, Message.Utility"/ -->
      </register >

     <register  type="DataAccessObject.IRepository`1[[BusinessEntities.EmployeePayHistory,BusinessEntities]], DataAccessObject.Unity3" 
                  mapTo="DataAccessObject.EFRepository`1[[BusinessEntities.EmployeePayHistory,BusinessEntities]], DataAccessObject.Unity3">
         <!--interceptor type="InterfaceInterceptor"/>
         <interceptionBehavior type="Messag.Utility.EntLib.Interceptor.LoggingInterceptor, Message.Utility"/ -->
      </register >

    </container>
  </unity>
</configuration>