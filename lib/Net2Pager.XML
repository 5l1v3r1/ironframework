<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Net2Pager</name>
    </assembly>
    <members>
        <member name="T:DiyControl.Pager.Net2Pager">
             <summary>
             用于ASP.NET Web应用程序中对数据进行分页的的服务器控件。
             </summary>
             <remarks>不同于GridGrid控件，Net2Pager分页控件本身并不显示任何数据，而只显示页导航元素，数据在页面上的显示方式与该控件无关。该控件可以为GridView、DataList、Repeater以及自定义控件进行分页，配合Sql存储过程，分页性能较使用GridView分页有明显提升，尤其是当数据量大时性能可提升数倍！
             <p>要使用 Net2Pager 分页控件，必须最少指定它的 <see cref="P:DiyControl.Pager.Net2Pager.RecordCount"/> 属性，指定并编写 <see cref="E:DiyControl.Pager.Net2Pager.PageChanged"/> 事件的处理程序。
             <see cref="P:DiyControl.Pager.Net2Pager.RecordCount"/> 属性指定要分页的所有数据的总项数，若未指定该值或该值小于等于 <see cref="P:DiyControl.Pager.Net2Pager.PageSize"/> ，则Net2Pager控件不会显示任何内容。
             若未指定并编写 <see cref="E:DiyControl.Pager.Net2Pager.PageChanged"/> 事件处理程序，则当用户点击页导航元素或在页索引文本框中手式输入页索引并提交时Net2Pager不会跳转到指定的页。
             Net2Pager控件的分页方法和GridView基本相同，即在它的 <see cref="E:DiyControl.Pager.Net2Pager.PageChanged"/> 事件处理程序中将传递事件数据的 <see cref="T:DiyControl.Pager.PageChangedEventArgs"/> 的 <see cref="P:DiyControl.Pager.PageChangedEventArgs.NewPageIndex"/>值赋给 Net2Pager的 <see cref="P:DiyControl.Pager.Net2Pager.CurrentPageIndex"/>属性，然后重新将新的数据与数据显示控件绑定。 </p></remarks>
             <example>以下示例说明如何用Net2Pager对GridView进行分页。
             <code><![CDATA[
            <%@ Page Language="C#"%>
            <%@ Import Namespace="System.Data"%>
            <%@Import Namespace="System.Data.SqlClient"%>
            <%@Import Namespace="System.Configuration"%>
            <%@Register TagPrefix="Net2Pager" Namespace="Wuqi.Net2Pager" Assembly="aspnetpager"%>
            <HTML>
            <HEAD>
            <TITLE>Welcome to Net2Pager.com </TITLE>
              <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("GetNews",conn);
            				cmd.CommandType=CommandType.StoredProcedure;
            				cmd.Parameters.Add("@pageindex",1);
            				cmd.Parameters.Add("@pagesize",1);
            				cmd.Parameters.Add("@docount",true);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			cmd.Parameters.Add("@docount",false);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            			pager.CustomInfoText="记录总数：<font color=\"blue\"><b>"+pager.RecordCount.ToString()+"</b></font>";
            			pager.CustomInfoText+=" 总页数：<font color=\"blue\"><b>"+pager.PageCount.ToString()+"</b></font>";
            			pager.CustomInfoText+=" 当前页：<font color=\"red\"><b>"+pager.CurrentPageIndex.ToString()+"</b></font>";
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
              </script>
                 <meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Net2Pager(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:GridView id="dataGrid1" runat="server" />
            
            			<Net2Pager:Net2Pager id="pager" 
            			runat="server" 
            			PageSize="8" 
            			NumericButtonCount="8" 
            			ShowCustomInfoSection="left" 
            			PagingButtonSpacing="0"
            			ShowInputBox="always" 
            			CssClass="mypager" 
            			HorizontalAlign="right" 
            			OnPageChanged="ChangePage"  
            			SubmitButtonText="转到" 
            			NumericButtonTextFormatString="[{0}]"/>
            
            		</form>
            	</body>
            </HTML>
             ]]>
             </code>
             <p>下面是该示例所用的Sql Server存储过程：</p>
             <code>
             <![CDATA[
            CREATE procedure GetNews
             	(@pagesize int,
            		@pageindex int,
            		@docount bit)
            		as
            		set nocount on
            		if(@docount=1)
            		select count(id) from news
            		else
            		begin
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.source,O.title,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		end
            		set nocount off
            GO
             ]]>
             </code></example>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.OnLoad(System.EventArgs)">
            <summary>
            重写 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)"/> 方法。
            </summary>
            <param name="e">包含事件数据的 <see cref="T:System.EventArgs"/> 对象。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.OnPreRender(System.EventArgs)">
            <summary>
            重写<see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/>方法。
            </summary>
            <param name="e">包含事件数据的 <see cref="T:System.EventArgs"/> 对象。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写<see cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)"/> 方法，将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 中
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)"/> 方法，将 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的 HTML 开始标记输出到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 编写器中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)"/> 方法，将 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的 HTML 结束标记输出到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 编写器中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)"/> 方法，将控件的内容呈现到指定 <see cref="T:System.Web.UI.HtmlTextWriter"/> 的编写器中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.GetStyleString">
            <summary>
            将基控件的Style转换为CSS字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.WriteCellAttributes(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            为用户自定义信息区和页导航按钮区和td添加属性。
            </summary>
            <param name="writer"></param>
            <param name="leftCell">是否为第一个td</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.GetHrefString(System.Int32)">
            <summary>
            获取分页导航按钮的超链接字符串。
            </summary>
            <param name="pageIndex">该分页按钮相对应的页索引。</param>
            <returns>分页导航按钮的超链接字符串。</returns>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.CreateNavigationButton(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            创建第一页、上一页、下一页及最后一页分页按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="btnname">分页按钮名。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.WriteCssClass(System.Web.UI.HtmlTextWriter)">
            <summary>
            写入CSS类名。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.AddToolTip(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            加入导航按钮提示文本。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="pageIndex">导航按钮对应的页索引。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.CreateNumericButton(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            创建分页数值导航按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="index">要创建按钮的页索引的值。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.WriteButtonSpace(System.Web.UI.HtmlTextWriter)">
            <summary>
            在分页导航元素间加入空格。
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.GetChinesePageIndex(System.Int32)">
            <summary>
            获取中文页索引字符。
            </summary>
            <param name="index">中文字符对应的页索引数值</param>
            <returns>对应于页索引数值的中文字符</returns>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.CreateNumericImages(System.Web.UI.HtmlTextWriter,System.Int32,System.Boolean)">
            <summary>
            创建页索引图片按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="index">页索引数值。</param>
            <param name="isCurrent">是否是当前页索引。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.CreateMoreButton(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            创建“更多页”（...）按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="pageIndex">链接到按钮的页的索引。</param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.RaisePostBackEvent(System.String)">
            <summary>
            实现<see cref="T:System.Web.UI.IPostBackEventHandler"/> 接口，使 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件能够处理将窗体发送到服务器时引发的事件。
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            实现 <see cref="T:System.Web.UI.IPostBackDataHandler"/> 接口，为 <see cref="T:DiyControl.Pager.Net2Pager"/> 服务器控件处理回发数据。
            </summary>
            <param name="pkey">控件的主要标识符。</param>
            <param name="pcol">所有传入名称值的集合。</param>
            <returns></returns>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.RaisePostDataChangedEvent">
            <summary>
            实现 <see cref="T:System.Web.UI.IPostBackDataHandler"/> 接口，用信号要求服务器控件对象通知 ASP.NET 应用程序该控件的状态已更改。
            </summary>
        </member>
        <member name="M:DiyControl.Pager.Net2Pager.OnPageChanged(DiyControl.Pager.PageChangedEventArgs)">
            <summary>
            引发 <see cref="E:DiyControl.Pager.Net2Pager.PageChanged"/> 事件。这使您可以为事件提供自定义处理程序。
            </summary>
            <param name="e">一个 <see cref="T:DiyControl.Pager.PageChangedEventArgs"/>，它包含事件数据。</param>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ShowNavigationToolTip">
            <summary>
            获取或设置一个值，该值批示当鼠标指针悬停在导航按钮上时是否显示工具提示。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.NavigationToolTipTextFormatString">
            <summary>
            获取或设置导航按钮工具提示文本的格式。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ChinesePageIndex">
            <summary>
            获取或设置一个值，该值指示是否将页索引按钮用中文数字代替。
            </summary>
            <remarks>
            将该值设为true并且未使用图片按钮时，页索引按钮中的数值1、2、3等将会被中文字符一、二、三等代替。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.NumericButtonTextFormatString">
            <summary>
            获取或设置页索引数值导航按钮上文字的显示格式。
            </summary>
            <value>
            字符串，指定页索引数值按钮上文字的显示格式，默认值为<see cref="F:System.String.Empty"/>，即未设置该属性。</value>
            <remarks>
            使用NumericButtonTextFormatString属性指定页索引数值按钮的显示格式，如未设置该值时索引按钮文本将会是：1 2 3 ...，设置该值将改变索引按钮文本的显示格式，
            如将该值设为“[{0}]”则索引文本会显示为：[1] [2] [3] ...，将该值设为“-{0}-”则会使索引文本变为：-1- -2- -3- ...。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.PagingButtonType">
            <summary>
            获取或设置分页导航按钮的类型，即使用文字还是图片。
            </summary>
            <remarks>
            要使用图片按钮，您需要准备以下图片：从0到9的十个数值图片（当ShowPageIndex设为true时），第一页、上一页、下一页、最后一页及更多页（...）五个按钮图片（当ShowFirstLast及ShowPrevNext都设为true时），
            若需要使当前页索引的数值按钮不同于别的页索引数值按钮，则还需准备当前页索引的按钮图片；
            若需要使已禁用的第一页、上一页、下一页及最后一页按钮图片不同于正常的按钮图片，则还需准备这四个按钮在禁用状态下的图片；
            <p><b>图片文件的命名规则如下：</b></p>
            <p>从0到9十张数值按钮图片必须命名为“数值+ButtonImageNameExtension+ButtonImageExtension”，其中的ButtonImageNameExtension可以不用设置，
            ButtonImageExtension是图片文件的后缀名，如 .gif或 .jpg等可以在浏览器中显示的任何图片文件类型。如页索引“1”的图片文件可命名为“1.gif”或“1.jpg”，
            当您有两套或更多套图片文件时，可以通过指定ButtonImageNameExtension属性值来区分不同套的图片，如第一套图片可以不用设ButtonImageNameExtension，则图片文件名类似于“1.gif”、“2.gif”等等，而第二套图片则设置ButtonImageNameExtension为“f”，图片文件名类似于“1f.gif”，“2f.gif”等等。</p>
            <p>第一页按钮的图片文件名以“first”开头，上一页按钮图片名以“prev”开头，下一页按钮图片名以“next”开头，最后一页按钮图片名以“last”开头，更多页按钮图片名以“more”开头，是否使用ButtonImageNameExtension取决于数值按钮的设置及是否有更多套图片。</p>
            </remarks>
            <example>
            以下代码片段示例如果使用图片按钮：
            <p>
            <code><![CDATA[
            <Net2Pager:Net2Pager runat="server" 
            	id="pager1" 
            	OnPageChanged="ChangePage"  
            	PagingButtonType="image" 
            	ImagePath="images" 
            	ButtonImageNameExtension="n" 
            	DisabledButtonImageNameExtension="g" 
            	ButtonImageExtension="gif" 
            	CpiButtonImageNameExtension="r" 
            	PagingButtonSpacing=5/>
            ]]>
            </code>
            </p>
            </example>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.NumericButtonType">
            <summary>
            获取或设置页导航数值按钮的类型，该值仅当PagingButtonType设为Image时才有效。
            </summary>
            <remarks>
            当您将PagingButtonType设为Image当又不想让页索引数值按钮使用图片时，可以将该值设为Text，这会使页索引数据按钮使用文本而不是图片按钮。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.NavigationButtonType">
            <summary>
            获取或设置第一页、上一页、下一页和最后一页按钮的类型，该值仅当PagingButtonType设为Image时才有效。
            </summary>
            <remarks>
            当您将PagingButtonType设为Image但又不想让第一页、下一页、下一页和最后一页按钮使用图片，则可以将该值设为Text，这会使前面的四个按钮使用文本而不是图片按钮。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.MoreButtonType">
            <summary>
            获取或设置“更多页”（...）按钮的类型，该值仅当PagingButtonType设为Image时才有效。
            </summary>
            <remarks>
            当您将PagingButtonType设为Image但又不想让更多页（...）按钮使用图片时，可以将此值设为Text，这会使更多页按钮使用文本而不是图片按钮。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.PagingButtonSpacing">
            <summary>
            获取或设置分页导航按钮之间的间距。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ShowFirstLast">
            <summary>
            获取或设置一个值，该值指示是否在页导航元素中显示第一页和最后一页按钮。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ShowPrevNext">
            <summary>
            获取或设置一个值，该值指示是否在页导航元素中显示上一页和下一页按钮。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ShowPageIndex">
            <summary>
            获取或设置一个值，该值指示是否在页导航元素中显示页索引数值按钮。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.FirstPageText">
            <summary>
            获取或设置为第一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.PrevPageText">
            <summary>
            获取或设置为上一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.NextPageText">
            <summary>
            获取或设置为下一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.LastPageText">
            <summary>
            获取或设置为最后一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.NumericButtonCount">
            <summary>
            获取或设置在 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的页导航元素中同时显示的数值按钮的数目。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ShowDisabledButtons">
            <summary>
            获取或设置一个值，该值指定是否显示已禁用的按钮。
            </summary>
            <remarks>
            该值用来指定是否显示已禁用的分页导航按钮，当当前页为第一页时，第一页和上一页按钮将被禁用，当当前页为最后一页时，下一页和最后一页按钮将被禁用，被禁用的按钮没有链接，在按钮上点击也不会有任何作用。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ImagePath">
            <summary>
            获取或设置当使用图片按钮时，图片文件的路径。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ButtonImageExtension">
            <summary>
            获取或设置当使用图片按钮时，图片的类型，如gif或jpg，该值即图片文件的后缀名。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ButtonImageNameExtension">
            <summary>
            获取或设置自定义图片文件名的后缀字符串，以区分不同类型的按钮图片。
            </summary>
            <remarks><note>注意：</note>该值不是文件后缀名，而是为区分不同的图片文件而在图片名中加入的字符串，如：
            当前有两套按钮图片，其中一套中的“1”的图片名可为“1f.gif”，另一套中的“1”的图片名可起为“1n.gif”，其中的f和n即为ButtonImageNameExtension。</remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.CpiButtonImageNameExtension">
            <summary>
            获取或设置当前页索引按钮的图片名后缀。
            </summary>
            <remarks>
            当 <see cref="P:DiyControl.Pager.Net2Pager.PagingButtonType"/> 设为 Image 时，该属性允许您设置当前页索引数值按钮使用的图片名后缀字符，因此可以使当前页索引按钮与其它页索引按钮使用不同的图片，若未设置该值，则默认值为<see cref="P:DiyControl.Pager.Net2Pager.ButtonImageNameExtension"/>，即当前页索引按钮与其它页索引按钮使用相同的图片。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.DisabledButtonImageNameExtension">
            <summary>
            获取或设置已禁用的页导航按钮图片名后缀字符串。
            </summary>
            <remarks>
            当 <see cref="P:DiyControl.Pager.Net2Pager.PagingButtonType"/> 设为 Image 时， 该值允许您设置已禁用（即没有链接，因而点击后无反应）的页导航按钮（包括第一页、上一页、下一页、最后一页四个按钮）的图片文件名后缀字符串，因此可以使已禁用的页导航按钮不同于正常的页导航按钮。若未设置该值，则默认值为<see cref="P:DiyControl.Pager.Net2Pager.ButtonImageNameExtension"/>，即已禁用的页导航按钮与正常的页导航按钮使用相同的图片。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ButtonImageAlign">
            <summary>
            指定当使用图片按钮时，图片的对齐方式。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.CurrentPageIndex">
             <summary>
             获取或设置当前显示页的索引。
             </summary>
            <remarks>使用此属性来确定在 Net2Pager 控件中当前显示的页，当前显示的页的数字索引将以红色字体加粗显示。此属性还用于以编程的方式控制所显示的页。
            <p>　<b>注意：</b>不同于GridView控件的CurrentPageIndex，Net2Pager的CurrentPageIndex属性是从1开始的。</p></remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.RecordCount">
             <summary>
             获取或设置需要分页的所有记录的总数。
             </summary>
             <remarks>
             当页面第一次加载时，应以编程方式将从存储过程或Sql语句中返回的数据表中所有要分页的记录的总数赋予该属性，Net2Pager会将其保存的ViewState中并在页面回发时从ViewState中获取该值，因此避免了每次分页都要访问数据库而影响分页性能。Net2Pager根据要分页的所有数据的总项数和 <see cref="P:DiyControl.Pager.Net2Pager.PageSize"/> 属性来计算显示所有数据需要的总页数，即 <see cref="P:DiyControl.Pager.Net2Pager.PageCount"/>的值。
             </remarks>
             <example>
             下面的示例显示如何以编程方式将从Sql语句返回的记录总数赋给该属性：
             <p>
             <code><![CDATA[
             <HTML>
             <HEAD>
             <TITLE>Welcome to Net2Pager.com </TITLE>
             <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("select count(id) from news",conn);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetPagedNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
            		</script>
            		<meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Net2Pager(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:GridView id="dataGrid1" runat="server" />
            
            			<Net2Pager:Net2Pager id="pager" runat="server" 
            			PageSize="8" 
            			NumericButtonCount="8" 
            			ShowCustomInfoSection="before" 
            			ShowInputBox="always" 
            			CssClass="mypager" 
            			HorizontalAlign="center" 
            			OnPageChanged="ChangePage" />
            
            		</form>
            	</body>
            </HTML>
             ]]>
             </code></p>
             <p>本示例使用的存储过程代码如下：</p>
             <code><![CDATA[
            CREATE procedure GetPagedNews
            		(@pagesize int,
            		@pageindex int)
            		as
            		set nocount on
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.title,O.source,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		set nocount off
            GO
             ]]>
             </code>
             </example>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.PagesRemain">
            <summary>
            获取当前页之后未显示的页的总数。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.PageSize">
            <summary>
            获取或设置每页显示的项数。
            </summary>
            <remarks>
            该值获取或设置数据呈现控件每次要显示数据表中的的数据的项数，Net2Pager根据该值和 <see cref="P:DiyControl.Pager.Net2Pager.RecordCount"/> 来计算显示所有数据需要的总页数，即 <see cref="P:DiyControl.Pager.Net2Pager.PageCount"/>的值。</remarks>
            <example>以下示例将 <see cref="T:DiyControl.Pager.Net2Pager"/> 设置为允许每页显示8条数据：
            <code>
            <![CDATA[
             ...
             <Net2Pager:Net2Pager id="pager" runat="server" PageSize=8 OnPageChanged="ChangePage"/>
             ...
            ]]></code></example>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.RecordsRemain">
            <summary>
            获取在当前页之后还未显示的剩余记录的项数。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.PageCount">
            <summary>
            获取所有要分页的记录需要的总页数。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ShowInputBox">
             <summary>
             获取或设置页索引文本框的显示方式。
             </summary>
             <remarks>
             页索引文件框允许用户手式输入要访问的页的索引，当页数非常多时，显示页索引文本框非常方便用户跳转到指定的页，默认情况下，该文本框只有在总页数大于或等于 <see cref="P:DiyControl.Pager.Net2Pager.ShowBoxThreshold"/> 的值时才显示，否则不显示，要想该文本框任何时候都显示，请将其值设为Always，若希望任何时候都不显示，则应设为Never。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.InputBoxClass">
            <summary>
            获取或设置应用于页索引输入文本框的CSS类名。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.InputBoxStyle">
            <summary>
            获取或设置页索引输入文本框的CSS样式文本。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.TextBeforeInputBox">
            <summary>
            获取或设置页索引页索引输入文本框前的文本字符串值。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.TextAfterInputBox">
            <summary>
            获取或设置页索引文本输入框后的文本内容字符串值。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.SubmitButtonText">
            <summary>
            获取或设置提交按钮上的文本。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.SubmitButtonClass">
            <summary>
            获取或设置应用于提交按钮的CSS类名。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.SubmitButtonStyle">
            <summary>
            获取或设置应用于提交按钮的CSS样式。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ShowBoxThreshold">
            <summary>
            获取或设置自动显示页索引输入文本框的最低起始页数。
            </summary>
            <remarks>
            当 <see cref="P:DiyControl.Pager.Net2Pager.ShowInputBox"/> 设为Auto（默认）并且要分页的数据的总页数达到该值时会自动显示页索引输入文本框，默认值为30。该选项当 <see cref="P:DiyControl.Pager.Net2Pager.ShowInputBox"/> 设为Never或Always时没有任何作用。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.ShowCustomInfoSection">
            <summary>
            获取或设置显示用户自定义信息区的方式。
            </summary>
            <remarks>
            该属性值设为Left或Right时会在分页导航元素左边或右边划出一个专门的区域来显示有关用户自定义信息，设为Never时不显示。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.CustomInfoTextAlign">
            <summary>
            获取或设置用户自定义信息区文本的对齐方式。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.CustomInfoSectionWidth">
            <summary>
            获取或设置用户自定义信息区的宽度。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.CustomInfoClass">
            <summary>
            获取或设置应用于用户自定义信息区的级联样式表类名。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.CustomInfoStyle">
            <summary>
            获取或设置应用于用户自定义信息区的CSS样式文本。
            </summary>
            <value>字符串值，要应用于用户自定义信息区的CSS样式文本。</value>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.CustomInfoText">
            <summary>
            获取或设置在显示在用户自定义信息区的用户自定义文本。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.AlwaysShow">
            <summary>
            获取或设置一个值，该值指定是否总是显示Net2Pager分页按件，即使要分页的数据只有一页。
            </summary>
            <remarks>
            默认情况下，当要分页的数据小于两页时，Net2Pager不会在页面上显示任何内容，将此属性值设为true时，即使总页数只有一页，Net2Pager也将显示分页导航元素。
            </remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.CssClass">
            <summary>
            获取或设置由 Net2Pager 服务器控件在客户端呈现的级联样式表 (CSS) 类。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.EnableViewState">
            <summary>
            获取或设置一个值，该值指示 Net2Pager 服务器控件是否向发出请求的客户端保持自己的视图状态，该属性经重写后不允许设为false。
            </summary>
            <remarks><see cref="T:DiyControl.Pager.Net2Pager"/> 服务器控件将一些重要的分页信息保存在ViewState中，当使用Url分页方式时，虽然视图状态在分页过程中没有任何作用，但若当前页需要回发，则必须启用视图状态以便分页控件能在页面回发后获取回发前的分页状态；当通过页面回发（PostBack）的方式来分页时，要使Net2Pager正常工作，必须启用视图状态。
            <p><note>该属性并不能禁止用户用<![CDATA[<%@Page EnableViewState=false%> ]]>页指令来禁用整个页面的视图状态，当使用此指令并且设置Net2Pager通过页面回发来分页时，Net2Pager因为无法获取保存的信息而不能正常工作。</note></p></remarks>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.PageIndexOutOfRangeErrorString">
            <summary>
            获取或设置当用户输入的页索引超出范围（大于最大页索引或小于最小页索引）时在客户端显示的错误信息。
            </summary>
        </member>
        <member name="P:DiyControl.Pager.Net2Pager.InvalidPageIndexErrorString">
            <summary>
            获取或设置当用户输入无效的页索引（负值或非数字）时在客户端显示的错误信息。
            </summary>
        </member>
        <member name="E:DiyControl.Pager.Net2Pager.PageChanged">
             <summary>
             当页导航元素之一被单击或用户手工输入页索引提交时发生。
             </summary>
             <example>下面的示例显示如何为PageChanged事件指定和编写事件处理程序，在该事件处理程序中重新绑定GridView上显示的数据：
             <code><![CDATA[
            <%@ Page Language="C#"%>
            <%@ Import Namespace="System.Data"%>
            <%@Import Namespace="System.Data.SqlClient"%>
            <%@Import Namespace="System.Configuration"%>
            <%@Register TagPrefix="Net2Pager" Namespace="Wuqi.Net2Pager" Assembly="aspnetpager"%>
            <HTML>
            <HEAD>
            <TITLE>Welcome to Net2Pager.com </TITLE>
              <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("GetNews",conn);
            				cmd.CommandType=CommandType.StoredProcedure;
            				cmd.Parameters.Add("@pageindex",1);
            				cmd.Parameters.Add("@pagesize",1);
            				cmd.Parameters.Add("@docount",true);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			cmd.Parameters.Add("@docount",false);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
              </script>
                 <meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Net2Pager(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:GridView id="dataGrid1" runat="server" />
            			<Net2Pager:Net2Pager id="pager" runat="server" PageSize="8" NumericButtonCount="8" ShowCustomInfoSection="before" ShowInputBox="always" CssClass="mypager" HorizontalAlign="center" OnPageChanged="ChangePage" />
            		</form>
            	</body>
            </HTML>
             ]]>
             </code>
             <p>该示例所用的Sql Server存储过程代码如下：</p>
             <code>
             <![CDATA[
            CREATE procedure GetNews
             	(@pagesize int,
            		@pageindex int,
            		@docount bit)
            		as
            		set nocount on
            		if(@docount=1)
            		select count(id) from news
            		else
            		begin
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.source,O.title,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		end
            		set nocount off
            GO
             ]]>
             </code>
            </example>
        </member>
        <member name="T:DiyControl.Pager.PageChangedEventHandler">
            <summary>
            表示处理 <see cref="E:DiyControl.Pager.Net2Pager.PageChanged"/> 事件的方法。
            </summary>
        </member>
        <member name="T:DiyControl.Pager.ShowInputBox">
            <summary>
            指定页索引输入文本框的显示方式，以便用户可以手工输入页索引。
            </summary>
        </member>
        <member name="F:DiyControl.Pager.ShowInputBox.Never">
            <summary>
            从不显示页索引输入文本框。
            </summary>
        </member>
        <member name="F:DiyControl.Pager.ShowInputBox.Auto">
            <summary>
            自动，选择此项后可以用 <see cref="P:DiyControl.Pager.Net2Pager.ShowBoxThreshold"/> 可控制当总页数达到多少时自动显示页索引输入文本框。
            </summary>
        </member>
        <member name="F:DiyControl.Pager.ShowInputBox.Always">
            <summary>
            总是显示页索引输入文本框。
            </summary>
        </member>
        <member name="T:DiyControl.Pager.ShowCustomInfoSection">
            <summary>
            指定当前页索引和总页数信息的显示方式。
            </summary>
        </member>
        <member name="F:DiyControl.Pager.ShowCustomInfoSection.Never">
            <summary>
            不显示。
            </summary>
        </member>
        <member name="F:DiyControl.Pager.ShowCustomInfoSection.Left">
            <summary>
            显示在页导航元素之前。
            </summary>
        </member>
        <member name="F:DiyControl.Pager.ShowCustomInfoSection.Right">
            <summary>
            显示在页导航元素之后。
            </summary>
        </member>
        <member name="T:DiyControl.Pager.PagingButtonType">
            <summary>
            指定页导航按钮的类型。
            </summary>
        </member>
        <member name="F:DiyControl.Pager.PagingButtonType.Text">
            <summary>
            使用文字按钮。
            </summary>
        </member>
        <member name="F:DiyControl.Pager.PagingButtonType.Image">
            <summary>
            使用图片按钮。
            </summary>
        </member>
        <member name="T:DiyControl.Pager.PageChangedEventArgs">
            <summary>
            为 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的 <see cref="E:DiyControl.Pager.Net2Pager.PageChanged"/> 事件提供数据。无法继承此类。
            </summary>
            <remarks>
            当 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的页导航元素之一被单击或用户输入页索引提交时引发 <see cref="E:DiyControl.Pager.Net2Pager.PageChanged"/> 事件。
            <p>有关 PageChangedEventArgs 实例的初始属性值列表，请参阅 PageChangedEventArgs 构造函数。</p>
            </remarks>
        </member>
        <member name="M:DiyControl.Pager.PageChangedEventArgs.#ctor(System.Int32)">
            <summary>
            使用新页面索引初始化 PageChangedEventArgs 类的新实例。
            </summary>
            <param name="newPageIndex">用户从 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的页选择元素选定的或在页索引文本框中手工输入的页的索引。</param>
        </member>
        <member name="P:DiyControl.Pager.PageChangedEventArgs.NewPageIndex">
             <summary>
             获取用户在 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的页选择元素中选定的或在页索引文本框中手工输入的页的索引。
             </summary>
            <value>用户在 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的页选择元素中选定的或在页索引文本框中输入的页的索引。
            </value>
            <remarks>
            使用 NewPageIndex 属性确定用户在 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的页选择元素中选定的或在页索引文本框中输入的页的索引。
            该值常用于设置要显示选定页的 Net2Pager 控件的 <see cref="P:DiyControl.Pager.Net2Pager.CurrentPageIndex"/> 属性。
            </remarks>
            <example>
             下面的示例显示如何使用 NewPageIndex 属性确定用户在 <see cref="T:DiyControl.Pager.Net2Pager"/> 控件的页选择元素中选定的或在页索引文本框中输入的页的索引。
            该值然后用于设置要显示选定页的 Net2Pager 控件的 <see cref="P:DiyControl.Pager.Net2Pager.CurrentPageIndex"/> 属性，并对数据显示控件重新绑定数据。
             <code><![CDATA[
            <%@ Page Language="C#"%>
            <%@ Import Namespace="System.Data"%>
            <%@Import Namespace="System.Data.SqlClient"%>
            <%@Import Namespace="System.Configuration"%>
            <%@Register TagPrefix="Net2Pager" Namespace="Wuqi.Net2Pager" Assembly="aspnetpager"%>
            <HTML>
            <HEAD>
            <TITLE>Welcome to Net2Pager.com </TITLE>
              <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("GetNews",conn);
            				cmd.CommandType=CommandType.StoredProcedure;
            				cmd.Parameters.Add("@pageindex",1);
            				cmd.Parameters.Add("@pagesize",1);
            				cmd.Parameters.Add("@docount",true);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			cmd.Parameters.Add("@docount",false);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
              </script>
                 <meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Net2Pager(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:DataGrid id="dataGrid1" runat="server" />
            
            			<Net2Pager:Net2Pager id="pager" 
            			runat="server" 
            			PageSize="8" 
            			NumericButtonCount="8" 
            			ShowCustomInfoSection="before" 
            			ShowInputBox="always" 
            			CssClass="mypager" 
            			HorizontalAlign="center" 
            			OnPageChanged="ChangePage" />
            
            		</form>
            	</body>
            </HTML>
             ]]>
             </code>
             <p>下面是该示例所用的Sql Server存储过程：</p>
             <code>
             <![CDATA[
            CREATE procedure GetNews
             	(@pagesize int,
            		@pageindex int,
            		@docount bit)
            		as
            		set nocount on
            		if(@docount=1)
            		select count(id) from news
            		else
            		begin
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.source,O.title,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		end
            		set nocount off
            GO
             ]]>
             </code>
            </example>
        </member>
        <member name="T:DiyControl.Pager.PagerDesigner">
            <summary>
            <see cref="T:DiyControl.Pager.Net2Pager"/> 服务器控件设计器。
            </summary>
        </member>
        <member name="M:DiyControl.Pager.PagerDesigner.#ctor">
            <summary>
            初始化 PagerDesigner 的新实例。
            </summary>
        </member>
        <member name="M:DiyControl.Pager.PagerDesigner.GetDesignTimeHtml">
            <summary>
            获取用于在设计时表示关联控件的 HTML。
            </summary>
            <returns>用于在设计时表示控件的 HTML。</returns>
        </member>
        <member name="M:DiyControl.Pager.PagerDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            获取在呈现控件时遇到错误后在设计时为指定的异常显示的 HTML。
            </summary>
            <param name="e">要为其显示错误信息的异常。</param>
            <returns>设计时为指定的异常显示的 HTML。</returns>
        </member>
    </members>
</doc>
